"use strict";(self.webpackChunk_rolemodel_optics=self.webpackChunk_rolemodel_optics||[]).push([[8393],{"./src/stories/Components/Form/Input.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Color:()=>Color,Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _Form_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/stories/Components/Form/Form.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Form/Input",render:({type,...args})=>(0,_Form_js__WEBPACK_IMPORTED_MODULE_0__.Ju)({type,...args}),argTypes:{type:{control:{type:"select"},options:["Text","Number","Email","Password","Tel","Checkbox","Radio","Color","Date","File"]},size:{control:{type:"select"},options:["small","medium","large"]},noBorder:{control:{type:"boolean"}},readonly:{control:{type:"boolean"}},disabled:{control:{type:"boolean"}},indeterminate:{control:{type:"boolean"},if:{arg:"type",eq:"Checkbox"}}}},Default={args:{type:"Text"}},Color={args:{type:"color"}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    type: 'Text'\n  }\n}",...Default.parameters?.docs?.source}}},Color.parameters={...Color.parameters,docs:{...Color.parameters?.docs,source:{originalSource:"{\n  args: {\n    type: 'color'\n  }\n}",...Color.parameters?.docs?.source}}};const __namedExportsOrder=["Default","Color"]},"./src/stories/Components/Form/Form.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$C:()=>createTextarea,By:()=>createFormGroup,Em:()=>createSelect,Ju:()=>createInput,_:()=>createLabel,xn:()=>createErrorSummary});const createLabel=({label,htmlFor="random"})=>{const labelElement=document.createElement("label");return labelElement.innerText=label,labelElement.className="form-label",labelElement.htmlFor=htmlFor,labelElement},createInput=({type,size,noBorder,readonly,id="random",indeterminate=!1,disabled=!1})=>{if("Radio"===type)return(({readonly,size,id,disabled=!1})=>{const input=document.createElement("input");return input.type="radio",input.id=id,input.className="form-control",input.className+=` form-control--${size}`,input.disabled=disabled,readonly&&input.setAttribute("readonly",readonly),input})({readonly,size,id,disabled});if("Checkbox"===type)return(({readonly,size,id,indeterminate,disabled=!1})=>{const input=document.createElement("input");return input.type="checkbox",input.id=id,input.className="form-control",input.className+=` form-control--${size}`,input.indeterminate=indeterminate,input.disabled=disabled,readonly&&input.setAttribute("readonly",readonly),input})({readonly,size,id,indeterminate,disabled});if("Color"===type)return(({readonly,size,id,disabled=!1})=>{const input=document.createElement("input");return input.type="color",input.id=id,input.className="form-control",input.className+=` form-control--${size}`,input.disabled=disabled,readonly&&input.setAttribute("readonly",readonly),input})({readonly,id,disabled});const input=document.createElement("input");return input.type=type,input.placeholder=type,input.id=id,input.disabled=disabled,readonly&&input.setAttribute("readonly",readonly),input.className="form-control",input.className+=` form-control--${size}`,noBorder&&(input.className+=" form-control--no-border"),input},createTextarea=({readonly,size,disabled=!1})=>{const input=document.createElement("textarea");return input.placeholder="Textarea",input.className="form-control",input.className+=` form-control--${size}`,input.disabled=disabled,readonly&&input.setAttribute("readonly",readonly),input},createSelect=({options,size="large",readonly,multiple,disabled=!1})=>{const input=document.createElement("select");input.className="form-control",input.className+=` form-control--${size}`,input.disabled=disabled,readonly&&input.setAttribute("readonly",readonly),multiple&&input.setAttribute("multiple",!0);const optionStrings=Array.from(Array(options)).map(((_,i)=>`<option>Option ${i+1}</option>`));return input.innerHTML=`\n  ${optionStrings.join("\n  ")}\n`,input},createErrorSummary=({label})=>{const element=document.createElement("div");return element.className="form-error-summary",element.innerHTML=`\n  <h2>${label}</h2>\n  <ul>\n    <li>Tags rank is not a number</li>\n    <li>Title can't be blank</li>\n  </ul>\n`,element},createFormGroup=({label,type,size="large",error,hint,noBorder,readonly,indeterminate,disabled,inline=!1})=>{const element=document.createElement("div");element.className="form-group",error&&(element.className+=" form-group--error"),inline&&(element.className+=" form-group--inline");const errorElement=document.createElement("span");if(errorElement.className="form-error",errorElement.innerText=error,"Checkbox"===type||"Radio"===type?(element.appendChild(createInput({type,size,readonly,indeterminate,noBorder,disabled})),element.appendChild(createLabel({label})),error&&element.appendChild(errorElement)):(element.appendChild(createLabel({label})),element.appendChild(createInput({type,size,readonly,noBorder,disabled})),error&&element.appendChild(errorElement)),hint){const hintElement=document.createElement("div");hintElement.className="form-hint",hintElement.innerText=hint,element.appendChild(hintElement)}return element}}}]);