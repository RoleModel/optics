%table-global {
  // Public API
  // Cells (for height, the appropriate variable is used when using the density modifiers)
  --_op-table-cell-height-default: calc(var(--op-space-scale-unit) * 4.4);
  --_op-table-cell-height-comfortable: calc(var(--op-space-scale-unit) * 6.4);
  --_op-table-cell-height-compact: calc(var(--op-space-scale-unit) * 3.4);

  // Private API
  // These allow for overriding specific padding versions easier.
  --__op-table-cell-height: var(--_op-table-cell-height-default);

  width: 100%;
  border-radius: var(--op-radius-medium);
  border-collapse: collapse;
  box-shadow: var(--op-border-all) var(--op-border-color);
  contain: paint;
  table-layout: auto;

  thead {
    background-color: var(--op-color-neutral-plus-eight);
    box-shadow: inset var(--op-border-top) var(--op-border-color);
    color: var(--op-color-neutral-on-plus-eight);

    // This Currently does not work in Firefox since it does not support :has yet, but fails gracefully.
    &:has(th input[type='checkbox']:checked) {
      background-color: var(--op-color-primary-plus-seven);
      color: var(--op-color-primary-on-plus-seven);
    }
  }

  th {
    font-weight: var(--op-font-weight-semi-bold);
    text-align: left;
  }

  tbody,
  tfoot {
    background-color: var(--op-color-neutral-plus-max);
    color: var(--op-color-neutral-on-plus-max);
  }

  th,
  td {
    height: var(--__op-table-cell-height);
    padding: var(--op-space-2x-small) var(--op-space-small);
    font-size: var(--op-font-small);
  }

  tr:not(:last-child) {
    box-shadow: inset var(--op-border-top) var(--op-border-color);
  }

  tfoot tr {
    box-shadow: var(--op-border-top) var(--op-border-color);
  }

  // Layout Modifiers
  &.table--auto-layout {
    table-layout: auto;
  }

  &.table--fixed-layout {
    table-layout: fixed;
  }

  // Table Density Modifiers
  &.table--default-density {
    --__op-table-cell-height: var(--_op-table-cell-height-default);
  }

  &.table--comfortable-density {
    --__op-table-cell-height: var(--_op-table-cell-height-comfortable);
  }

  &.table--compact-density {
    --__op-table-cell-height: var(--_op-table-cell-height-compact);
  }

  // Striped Modifiers
  &.table--even-striped {
    tbody tr:nth-child(even) {
      background-color: var(--op-color-neutral-plus-seven);
      color: var(--op-color-neutral-on-plus-seven);
    }
  }

  &.table--odd-striped {
    tbody tr:nth-child(odd) {
      background-color: var(--op-color-neutral-plus-seven);
      color: var(--op-color-neutral-on-plus-seven);
    }
  }

  // Sticky Header Row Modifier
  &.table--sticky-header thead {
    position: sticky;
    top: 0;
  }

  // Sticky Footer Row Modifier
  &.table--sticky-footer tfoot {
    position: sticky;
    bottom: 0;
  }
}

// Default Table
.table {
  @extend %table-global;
}

// Primary Table
.table-primary {
  @extend %table-global;

  thead {
    background-color: var(--op-color-primary-plus-seven);
    color: var(--op-color-primary-on-plus-seven);
  }
}

// Danger Table
.table-danger {
  @extend %table-global;

  thead {
    background-color: var(--op-color-alerts-danger-plus-seven);
    color: var(--op-color-alerts-danger-on-plus-seven);
  }
}

// Sticky Header / Footer Table Container
.table-container {
  @extend %table-global;

  overflow-y: auto;
}
