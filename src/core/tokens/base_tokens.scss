// Using Mixins allows us to include them at a component level
// as needed and override them.

// A theme comprised of a pimary color and a neutral color with a hint of the primary color.
@mixin color-varieties {
  // Primary HSL
  --rm-color-primary-h: var(--rm-color-blue-h);
  --rm-color-primary-s: var(--rm-color-blue-s);
  --rm-color-primary-l: var(--rm-color-blue-l);

  // Neutral HSL
  --rm-color-neutral-h: var(--rm-color-primary-h);
  --rm-color-neutral-s: 2%;
  --rm-color-neutral-l: var(--rm-color-primary-l);
}

@mixin border-radius {
  --rm-radius-small:   2px;
  --rm-radius-medium:  4px;
  --rm-radius-large:   8px;
  --rm-radius-x-large: 16px;
  --rm-radius-circle:  50%;
  --rm-radius-pill:    9999px;
}

@mixin border-widths {
  --rm-border-width:         1px;
  --rm-border-width-large:   2px;
  --rm-border-width-x-large: 4px;
}

@mixin border-colors {
  --rm-border-color: var(--rm-color-neutral-plus-1);
}

@mixin box-shadows {
  // E.G. box-shadow: var(--rm-border-top) var(--rm-border-color);
  --rm-border-all: 0 0 0 var(--rm-border-width);
  --rm-border-top: 0 calc(-1 * var(--rm-border-width)) 0 0;
  --rm-border-right: var(--rm-border-width) 0 0 0;
  --rm-border-bottom: 0 var(--rm-border-width) 0 0;
  --rm-border-left: calc(-1 * var(--rm-border-width)) 0 0 0;

  --rm-border-y: var(--rm-border-top) var(--rm-border-color), var(--rm-border-bottom) var(--rm-border-color);
  --rm-border-x: var(--rm-border-left) var(--rm-border-color), var(--rm-border-right) var(--rm-border-color);
}

@mixin font-scales {
  --rm-font-scale-unit: 1rem; // 10px;

  --rm-font-x-small:  calc(var(--rm-font-scale-unit) * 1.2); // 12px
  --rm-font-small:    calc(var(--rm-font-scale-unit) * 1.4); // 14px
  --rm-font-medium:   calc(var(--rm-font-scale-unit) * 1.6); // 16px
  --rm-font-large:    calc(var(--rm-font-scale-unit) * 1.8); // 18px
  --rm-font-x-large:  calc(var(--rm-font-scale-unit) * 2.4); // 24px
  --rm-font-2x-large: calc(var(--rm-font-scale-unit) * 2.8); // 28px
  --rm-font-3x-large: calc(var(--rm-font-scale-unit) * 3.2); // 32px
  --rm-font-4x-large: calc(var(--rm-font-scale-unit) * 3.6); // 36px
  --rm-font-5x-large: calc(var(--rm-font-scale-unit) * 4.8); // 48px
}

@mixin font-weights {
  --rm-font-weight-thin:        100;
  --rm-font-weight-extra-light: 200;
  --rm-font-weight-light:       300;
  --rm-font-weight-normal:      400;
  --rm-font-weight-medium:      500;
  --rm-font-weight-semi-bold:   600;
  --rm-font-weight-bold:        700;
  --rm-font-weight-extra-bold:  800;
  --rm-font-weight-black:       900;
}

@mixin line-heights {
  --rm-line-height-none:    0;
  --rm-line-height-densest: 1;
  --rm-line-height-denser:  1.15;
  --rm-line-height-dense:   1.3;
  --rm-line-height-base:    1.5;
  --rm-line-height-loose:   1.6;
  --rm-line-height-looser:  1.7;
  --rm-line-height-loosest: 1.8;
}

@mixin letter-spacing {
  --rm-letter-spacing-label: 0.4px;
}

@mixin transitions {
  --rm-transition-input:   120ms;
  --rm-transition-sidebar: 300ms;
  --rm-transition-modal:   300ms;
  --rm-transition-panel:   400ms;
  --rm-transition-flash:   5s;
}

@mixin clip-paths {
  --rm-clippath-form-radio: circle(40% at 50% 50%);
  --rm-clippath-form-checkmark: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);
}

@mixin fonts {
  --rm-font-family: 'Noto Sans', 'Noto Serif', sans-serif;
}

@mixin spacing-scales {
  --rm-space-scale-unit: 1rem; // 10px;

  --rm-space-3x-small: calc(var(--rm-space-scale-unit) * 0.2); // 2px
  --rm-space-2x-small: calc(var(--rm-space-scale-unit) * 0.4); // 4px
  --rm-space-x-small:  calc(var(--rm-space-scale-unit) * 0.8); // 8px
  --rm-space-small:    calc(var(--rm-space-scale-unit) * 1.2); // 12px
  --rm-space-medium:   calc(var(--rm-space-scale-unit) * 1.6); // 16px
  --rm-space-large:    calc(var(--rm-space-scale-unit) * 2.0); // 20px
  --rm-space-x-large:  calc(var(--rm-space-scale-unit) * 2.4); // 24px
  --rm-space-2x-large: calc(var(--rm-space-scale-unit) * 2.8); // 28px
  --rm-space-3x-large: calc(var(--rm-space-scale-unit) * 4.0); // 40px
  --rm-space-4x-large: calc(var(--rm-space-scale-unit) * 8.0); // 80px
}

@mixin shadows {
  --rm-shadow-x-small: 0px 1px 2px rgba(0, 0, 0, 0.3), 0px 1px 3px 1px rgba(0, 0, 0, 0.15);
  --rm-shadow-small: 0px 1px 2px rgba(0, 0, 0, 0.3), 0px 2px 6px 2px rgba(0, 0, 0, 0.15);
  --rm-shadow-medium: 0px 4px 8px 3px rgba(0, 0, 0, 0.15), 0px 1px 3px rgba(0, 0, 0, 0.3);
  --rm-shadow-large: 0px 6px 10px 4px rgba(0, 0, 0, 0.15), 0px 2px 3px rgba(0, 0, 0, 0.3);
  --rm-shadow-x-large: 0px 8px 12px 6px rgba(0, 0, 0, 0.15), 0px 4px 4px rgba(0, 0, 0, 0.3);
}

@mixin z-indexes {
  --rm-z-index-header: 500;
  --rm-z-index-drawer: 700;
  --rm-z-index-dialog: 800;
  --rm-z-index-dialog-backdrop: 801;
  --rm-z-index-dialog-content: 802;
  --rm-z-index-dropdown: 900;
  --rm-z-index-alert-group: 950;
  --rm-z-index-tooltip: 1000;
}

@mixin inputs {
  // This should follow multiples of 4
  // https: //uxdesign.cc/baseline-grids-design-systems-ae23b5af8cec See example 8
  --rm-input-height-small:   2.4rem; // 24px
  --rm-input-height-medium:  3.2rem; // 32px
  --rm-input-height-large:   4.4rem; // 44px
  --rm-input-height-x-large: 5.6rem; // 56px
}

// We use SCSS variables outside the root since support for custom properties / css variables
// is not yet available
// https://drafts.csswg.org/css-env-1/
// https://bholmes.dev/blog/alternative-to-css-variable-media-queries/

$breakpoint-x-small: 512px; // phone
$breakpoint-small: 768px; // vertical ipad
$breakpoint-medium: 1024px; // landscape ipad
$breakpoint-large: 1280px; // small laptop
$breakpoint-x-large: 1440px; // medium laptop

@import url('https://fonts.googleapis.com/css2?family=Noto+Sans:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Noto+Serif:ital,wght@0,400;0,700;1,400;1,700&display=swap');
:root {
  // Color HSLs
  @include color-varieties;

  // Border
  @include border-radius;
  @include border-widths;
  @include border-colors;
  @include box-shadows;

  // Font
  @include font-scales;
  @include font-weights;
  @include fonts;

  // Text
  @include line-heights;
  @include letter-spacing;

  // Transitions
  @include transitions;

  // Clip Paths
  @include clip-paths;

  // Spacing
  @include spacing-scales;

  // Shadows
  @include shadows;

  // Z Index
  @include z-indexes;

  // Inputs
  @include inputs;
}

// Animations
@keyframes rmSlideInOutFlash {
  // If an duration of 5s is set:
  // Start off the Screen
  0% {
    right: -100%;
  }

  // Animate onto the screen for 0.5s
  10% {
    right: var(--rm-space-large);
  }

  // Stay on the screen for 3s
  70% {
    right: var(--rm-space-large);
  }

  // Animate off the screen for 1.5s
  100% {
    right: -100%;
  }
}
